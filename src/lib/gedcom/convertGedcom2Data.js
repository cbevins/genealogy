import fs from 'fs'
import { file2JsonArray } from '../index.js'
import { intFmt } from '../helpers/formatters.js'
import { parseLine } from './constructGedcom.js'

const progName = (process.argv[1]).split('\\').pop()

const inputs = ['../tmp/Ancestry.ged', '../tmp/RootsMagic.ged']
const outputs = ['_gedcomDataAncestry.js', '_gedcomDataRootsMagic.js']

const keepersSet = new Set()
const keepers= [
    'FAM',
    'FAM-CHIL',
    'FAM-DIV',
    'FAM-DIV-DATE',
    'FAM-DIV-NOTE',
    'FAM-DIV-PLAC',
    'FAM-MARR',
    'FAM-MARR-',
    'FAM-MARR-DATE',
    'FAM-MARR-NOTE',
    'FAM-MARR-PLAC',
    'FAM-HUSB',
    'FAM-WIFE',
    'HEAD',
    'HEAD-DATE',
    'HEAD-SOUR',
    'HEAD-SOUR-NAME',
    'INDI',
    'INDI-BIRT',
    'INDI-BIRT-DATE',
    'INDI-BIRT-NOTE',
    'INDI-BIRT-PLAC',
    'INDI-DEAT',
    'INDI-DEAT-DATE',
    'INDI-DEAT-NOTE',
    'INDI-DEAT-PLAC',
    'INDI-FAMC',
    'INDI-FAMS',
    'INDI-NOTE',
    'INDI-SEX',
    'INDI-NAME',
    'INDI-NAME-GIVN',
    'INDI-NAME-NICK',
    'INDI-NAME-NPFX',
    'INDI-NAME-NSFX',
    'INDI-NAME-SURN',
    'INDI-NAME-SPFX',
    '_PLAC',
    '_PLAC-STND',
    '_PLAC-MAP',
    '_PLAC-MAP-LATI',
    '_PLAC-MAP-LONG',
]
keepers.forEach(item => keepersSet.add(item))

const started = new Date()
console.log(`${progName} ...`)
for (let i=0; i<inputs.length; i++) {
    const time1 = new Date()

    const lines = await file2JsonArray(inputs[i])
    const time2 = new Date()
    console.log(`    GEDCOM file          : '${inputs[i]}' has ${lines.length} records`)
    console.log(`        file2JsonArray() : ${intFmt(time2-time1)} msec`)

    const selected = selectLines(lines, keepersSet)
    const time3 = new Date()
    const pct = (100 * selected.length / lines.length).toFixed(0)
    console.log(`        selectLines()    : ${intFmt(time3-time2)} msec ${selected.length} selected records (${pct}%)`)

    writeFile(selected, outputs[i])
    const time4 = new Date()
    console.log(`        writeFile()      : ${intFmt(time4-time3)} msec`)
    console.log(`        created file     : '${outputs[i]}'`)
}
console.log(`Total elapsed time: ${(new Date()-started)} msec`)


function selectLines(lines, selectSet=null) {
    const selected = []
    const contexts = new Array(20).fill(0)
    for (let i=0; i<lines.length; i++) {
        const data = parseLine(lines[i], i+1)
        if (data) {
            const [level, type, content] = data
            contexts[level] = type
            const key = (contexts.slice(0,level+1)).join('-')
            if (!selectSet || (selectSet && selectSet.has(key))) {
                selected.push(lines[i])
            }
        }
    }
    return selected
}

function writeFile(lines, outputName, varName='_gedcomData') {
    // Create some Javascript from the text array
    let js = `// auto-generated by ${progName} on ${new Date().toLocaleString()}\n`
    js += `export const ${varName} = [\n`
    for(let i=0; i<lines.length; i++) js += JSON.stringify(lines[i]) + ',\n'
    js += ']\n'
    // Write the Javascript to a file for later use
    fs.writeFile(outputName, js, function (err) {
        if (err) throw err
    })
}
